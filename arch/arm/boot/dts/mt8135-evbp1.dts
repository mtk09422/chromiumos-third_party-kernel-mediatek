/*
 * Copyright (c) 2014 MediaTek Inc.
 * Author: Joe.C <yingjoe.chen@mediatek.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;
#include <dt-bindings/clock/mediatek,mt6397-clks.h>
#include "mt8135.dtsi"

/ {
	model = "mediatek,mt8135-evbp1", "mediatek,mt8135";

	memory {
		reg = <0 0x80000000 0 0x40000000>;
	};
};

&uart3 {
	status = "okay";
};

&pwrap {
	pmic: mt6397 {
		compatible = "mediatek,mt6397";
		interrupt-parent = <&pio>;
		interrupts = <0 IRQ_TYPE_LEVEL_HIGH>;
		interrupt-controller;
		#interrupt-cells = <2>;

		mt6397clock: mt6397clock {
			compatible = "mediatek,mt6397-clk";
			#clock-cells = <1>;
		};

		mt6397regulator: mt6397regulator {
			compatible = "mediatek,mt6397-regulator";

			mt6397_vpca15_reg: buck_vpca15 {
				regulator-compatible = "buck_vpca15";
				regulator-name = "vpca15";
				regulator-min-microvolt = < 850000>;
				regulator-max-microvolt = <1350000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
			};

			mt6397_vpca7_reg: buck_vpca7 {
				regulator-compatible = "buck_vpca7";
				regulator-name = "vpca7";
				regulator-min-microvolt = < 850000>;
				regulator-max-microvolt = <1350000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
			};

			mt6397_vsramca15_reg: buck_vsramca15 {
				regulator-compatible = "buck_vsramca15";
				regulator-name = "vsramca15";
				regulator-min-microvolt = < 850000>;
				regulator-max-microvolt = <1350000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
			};

			mt6397_vsramca7_reg: buck_vsramca7 {
				regulator-compatible = "buck_vsramca7";
				regulator-name = "vsramca7";
				regulator-min-microvolt = < 850000>;
				regulator-max-microvolt = <1350000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
			};

			mt6397_vcore_reg: buck_vcore {
				regulator-compatible = "buck_vcore";
				regulator-name = "vcore";
				regulator-min-microvolt = < 850000>;
				regulator-max-microvolt = <1350000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
			};

			mt6397_vgpu_reg: buck_vgpu {
				regulator-compatible = "buck_vgpu";
				regulator-name = "vgpu";
				regulator-min-microvolt = < 700000>;
				regulator-max-microvolt = <1350000>;
				regulator-ramp-delay = <12500>;
				regulator-enable-ramp-delay = <115>;
			};

			mt6397_vdrm_reg: buck_vdrm {
				regulator-compatible = "buck_vdrm";
				regulator-name = "vdrm";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1400000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
			};

			mt6397_vio18_reg: buck_vio18 {
				regulator-compatible = "buck_vio18";
				regulator-name = "vio18";
				regulator-min-microvolt = <1620000>;
				regulator-max-microvolt = <1980000>;
				regulator-ramp-delay = <12500>;
				regulator-always-on;
			};

			mt6397_vtcxo_reg: ldo_vtcxo {
				regulator-compatible = "ldo_vtcxo";
				regulator-name = "vtcxo";
				regulator-always-on;
			};

			mt6397_va28_reg: ldo_va28 {
				regulator-compatible = "ldo_va28";
				regulator-name = "va28";
				regulator-always-on;
			};

			mt6397_vcama_reg: ldo_vcama {
				regulator-compatible = "ldo_vcama";
				regulator-name = "vcama";
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <2800000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vio28_reg: ldo_vio28 {
				regulator-compatible = "ldo_vio28";
				regulator-name = "vio28";
				regulator-always-on;
			};

			mt6397_vusb_reg: ldo_vusb {
				regulator-compatible = "ldo_vusb";
				regulator-name = "vusb";
			};

			mt6397_vmc_reg: ldo_vmc {
				regulator-compatible = "ldo_vmc";
				regulator-name = "vmc";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vmch_reg: ldo_vmch {
				regulator-compatible = "ldo_vmch";
				regulator-name = "vmch";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vemc_3v3_reg: ldo_vemc3v3 {
				regulator-compatible = "ldo_vemc3v3";
				regulator-name = "vemc_3v3";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vgp1_reg: ldo_vgp1 {
				regulator-compatible = "ldo_vgp1";
				regulator-name = "vcamd";
				regulator-min-microvolt = <1220000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <240>;
			};

			mt6397_vgp2_reg: ldo_vgp2 {
				regulator-compatible = "ldo_vgp2";
				regulator-name = "vcamio";
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vgp3_reg: ldo_vgp3 {
				regulator-compatible = "ldo_vgp3";
				regulator-name = "vcamaf";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vgp4_reg: ldo_vgp4 {
				regulator-compatible = "ldo_vgp4";
				regulator-name = "vgp4";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vgp5_reg: ldo_vgp5 {
				regulator-compatible = "ldo_vgp5";
				regulator-name = "vgp5";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3000000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vgp6_reg: ldo_vgp6 {
				regulator-compatible = "ldo_vgp6";
				regulator-name = "vgp6";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};

			mt6397_vibr_reg: ldo_vibr {
				regulator-compatible = "ldo_vibr";
				regulator-name = "vibr";
				regulator-min-microvolt = <1300000>;
				regulator-max-microvolt = <3300000>;
				regulator-enable-ramp-delay = <218>;
			};
		};
	};
};

&pio {
	mmc0_pins_default: mmc0default {
		pins_cmd_dat {
			pins = <MT8135_PIN_0_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
				<MT8135_PIN_1_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
				<MT8135_PIN_2_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
				<MT8135_PIN_3_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
				<MT8135_PIN_4_MSDC0_CMD__FUNC_MSDC0_CMD>,
				<MT8135_PIN_6_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
				<MT8135_PIN_7_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
				<MT8135_PIN_8_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
				<MT8135_PIN_9_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
				<MT8135_PIN_33_MSDC0_RSTB__FUNC_MSDC0_RSTB>;
			bias-pull-up;
		};
		pins_clk {
			pins = <MT8135_PIN_5_MSDC0_CLK__FUNC_MSDC0_CLK>;
			bias-pull-down;
		};
	};

	mmc1_pins_default: mmc1default {
		pins_cmd_dat {
			pins = <MT8135_PIN_83_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
			     <MT8135_PIN_84_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
			     <MT8135_PIN_85_MSDC1_CMD__FUNC_MSDC1_CMD>,
			     <MT8135_PIN_87_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
			     <MT8135_PIN_88_MSDC1_DAT3__FUNC_MSDC1_DAT3>,
			     <MT8135_PIN_63_MSDC1_INSI__FUNC_MSDC1_INSI>;
			bias-pull-up;
		};
		pins_clk {
			pins = <MT8135_PIN_86_MSDC1_CLK__FUNC_MSDC1_CLK>;
			bias-pull-down;
		};
	};

	mmc2_pins_default: mmc2default {
		pins_cmd_dat {
			pins = <MT8135_PIN_82_MSDC2_DAT0__FUNC_MSDC2_DAT0>,
			     <MT8135_PIN_81_MSDC2_DAT1__FUNC_MSDC2_DAT1>,
			     <MT8135_PIN_79_MSDC2_CMD__FUNC_MSDC2_CMD>,
			     <MT8135_PIN_77_MSDC2_DAT2__FUNC_MSDC2_DAT2>,
			     <MT8135_PIN_78_MSDC2_DAT3__FUNC_MSDC2_DAT3>,
			     <MT8135_PIN_65_MSDC2_INSI__FUNC_MSDC2_INSI>;
			bias-pull-up;
		};
		pins_clk {
			pins = <MT8135_PIN_80_MSDC2_CLK__FUNC_MSDC2_CLK>;
		bias-pull-down;
		};
	};

	mmc0_pins_uhs: mmc0@0 {
		pins_cmd_dat {
			pins = <MT8135_PIN_0_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
			     <MT8135_PIN_1_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
			     <MT8135_PIN_2_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
			     <MT8135_PIN_3_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
			     <MT8135_PIN_4_MSDC0_CMD__FUNC_MSDC0_CMD>,
			     <MT8135_PIN_6_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
			     <MT8135_PIN_7_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
			     <MT8135_PIN_8_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
			     <MT8135_PIN_9_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
			     <MT8135_PIN_33_MSDC0_RSTB__FUNC_MSDC0_RSTB>;
			input-enable;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
		};
		pins_clk {
			pins = <MT8135_PIN_5_MSDC0_CLK__FUNC_MSDC0_CLK>;
			drive-strength = <MTK_DRIVE_6mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_01>;
		};
	};

	mmc1_pins_uhs: mmc1@0 {
		pins_cmd_dat {
			pins = <MT8135_PIN_83_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
			     <MT8135_PIN_84_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
			     <MT8135_PIN_85_MSDC1_CMD__FUNC_MSDC1_CMD>,
			     <MT8135_PIN_87_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
			     <MT8135_PIN_88_MSDC1_DAT3__FUNC_MSDC1_DAT3>;
			input-enable;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
		};
		pins_clk {
			pins = <MT8135_PIN_86_MSDC1_CLK__FUNC_MSDC1_CLK>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};
	};

	mmc2_pins_uhs: mmc2@0 {
		pins_cmd_dat {
			pins = <MT8135_PIN_82_MSDC2_DAT0__FUNC_MSDC2_DAT0>,
			     <MT8135_PIN_81_MSDC2_DAT1__FUNC_MSDC2_DAT1>,
			     <MT8135_PIN_79_MSDC2_CMD__FUNC_MSDC2_CMD>,
			     <MT8135_PIN_77_MSDC2_DAT2__FUNC_MSDC2_DAT2>,
			     <MT8135_PIN_78_MSDC2_DAT3__FUNC_MSDC2_DAT3>;
			input-enable;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
		};
		pins_clk {
			pins = <MT8135_PIN_80_MSDC2_CLK__FUNC_MSDC2_CLK>;
			drive-strength = <MTK_DRIVE_8mA>;
			bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
		};
	};
};

&mmc0 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc0_pins_default>;
	pinctrl-1 = <&mmc0_pins_uhs>;
	status = "okay";
	bus-width = <8>;
	max-frequency = <50000000>;
	cap-mmc-highspeed;
	core-power-supply = <&mt6397_vemc_3v3_reg>;
	non-removable;
	func = "EMMC";
};

&mmc1 {
	pinctrl-names = "default", "state_uhs";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_uhs>;
	status = "okay";
	bus-width = <4>;
	max-frequency = <50000000>;
	core-power-supply = <&mt6397_vmch_reg>;
	io-power-supply = <&mt6397_vmc_reg>;
	cd-gpios = <&pio 63 0>;
	func = "SDCARD";
};
