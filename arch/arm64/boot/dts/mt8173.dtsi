/*
 * Copyright (c) 2014 MediaTek Inc.
 * Author: Eddie Huang <eddie.huang@mediatek.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/reset-controller/mt8173-resets.h>
#include "mt8173-clocks.dtsi"
#include "mt8173-pinfunc.h"

/ {
	compatible = "mediatek,mt8173";
	interrupt-parent = <&sysirq>;
	#address-cells = <2>;
	#size-cells = <2>;

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};
				core1 {
					cpu = <&cpu1>;
				};
			};

			cluster1 {
				core0 {
					cpu = <&cpu2>;
				};
				core1 {
					cpu = <&cpu3>;
				};
			};
		};

		cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x000>;
		};

		cpu1: cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x001>;
			enable-method = "psci";
		};

		cpu2: cpu@100 {
			device_type = "cpu";
			compatible = "arm,cortex-a57";
			reg = <0x100>;
			enable-method = "psci";
		};

		cpu3: cpu@101 {
			device_type = "cpu";
			compatible = "arm,cortex-a57";
			reg = <0x101>;
			enable-method = "psci";
		};
	};

	psci {
		compatible = "arm,psci";
		method = "smc";
		cpu_suspend   = <0x84000001>;
		cpu_off	      = <0x84000002>;
		cpu_on	      = <0x84000003>;
	};

	uart_clk: dummy26m {
		compatible = "fixed-clock";
		clock-frequency = <26000000>;
		#clock-cells = <0>;
	};

	timer {
		compatible = "arm,armv8-timer";
		interrupt-parent = <&gic>;
		interrupts = <1 13 0xf08>,
			     <1 14 0xf08>,
			     <1 11 0xf08>,
			     <1 10 0xf08>;
	};

	soc {
		#address-cells = <2>;
		#size-cells = <2>;
		compatible = "simple-bus";
		ranges;

		syscfg_pctl_a: syscfg_pctl_a@10005000 {
			compatible = "mediatek,mt8173-pctl-a-syscfg", "syscon";
			reg = <0 0x10005000 0 0x1000>;
		};

		sysirq: intpol-controller@10200620 {
			compatible = "mediatek,mt8173-sysirq", "mediatek,mt6577-sysirq";
			interrupt-controller;
			#interrupt-cells = <3>;
			interrupt-parent = <&gic>;
			reg = <0 0x10200620 0 0x20>;
		};

		infracfg: syscon@10001000 {
			#address-cells = <1>;
			#size-cells = <1>;
			compatible = "mediatek,mt8173-infracfg", "syscon";
			reg = <0 0x10001000 0 0x1000>;

			infrarst: reset-controller@30 {
				#reset-cells = <1>;
				compatible = "mediatek,mt8173-infracfg-reset", "mediatek,reset";
				reg = <0x30 0x8>;
			};
		};

		pericfg: syscon@10003000 {
			#address-cells = <1>;
			#size-cells = <1>;
			compatible = "mediatek,mt8173-pericfg", "syscon";
			reg = <0 0x10003000 0 0x1000>;

			perirst: reset-controller@00 {
				#reset-cells = <1>;
				compatible = "mediatek,mt8173-pericfg-reset", "mediatek,reset";
				reg = <0x00 0x8>;
			};
		};

		pwrap: pwrap@1000D000 {
			compatible = "mediatek,mt8173-pwrap";
			reg = <0 0x1000D000 0 0x1000>;
			reg-names = "pwrap-base";
			interrupts = <GIC_SPI 153 IRQ_TYPE_LEVEL_HIGH>;
			resets = <&infrarst MT8173_INFRA_PMIC_WRAP_RST>;
			reset-names = "infra-pwrap-rst";
		};

		gic: interrupt-controller@10220000 {
			compatible = "arm,gic-400";
			#interrupt-cells = <3>;
			interrupt-parent = <&gic>;
			interrupt-controller;
			reg = <0 0x10221000 0 0x1000>,
			      <0 0x10222000 0 0x2000>,
			      <0 0x10224000 0 0x2000>,
			      <0 0x10226000 0 0x2000>;
			interrupts = <1 9 0xf04>;
		};

		pio: pinctrl@0x10005000 {
			compatible = "mediatek,mt8173-pinctrl";
			reg = <0 0x1000B000 0 0x1000>;
			mediatek,pctl-regmap = <&syscfg_pctl_a>;
			gpio-controller;
			#gpio-cells = <2>;
			interrupt-controller;
			#interrupt-cells = <2>;
			interrupts = <GIC_SPI 145 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 146 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 147 IRQ_TYPE_LEVEL_HIGH>;

			mmc0_pins_default: mmc0default {
				pins_cmd_dat {
					pins = <MT8173_PIN_64_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
						<MT8173_PIN_63_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
						<MT8173_PIN_62_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
						<MT8173_PIN_61_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
						<MT8173_PIN_66_MSDC0_CMD__FUNC_MSDC0_CMD>,
						<MT8173_PIN_60_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
						<MT8173_PIN_59_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
						<MT8173_PIN_58_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
						<MT8173_PIN_57_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
						<MT8173_PIN_68_MSDC0_RST___FUNC_MSDC0_RSTB>;
					bias-pull-up;
				};
				pins_clk {
					pins =  <MT8173_PIN_65_MSDC0_CLK__FUNC_MSDC0_CLK>;
					bias-pull-down;
				};
			};

			mmc1_pins_default: mmc1default {
				pins_cmd_dat {
					pins = <MT8173_PIN_73_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
						<MT8173_PIN_74_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
						<MT8173_PIN_78_MSDC1_CMD__FUNC_MSDC1_CMD>,
						<MT8173_PIN_75_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
						<MT8173_PIN_76_MSDC1_DAT3__FUNC_MSDC1_DAT3>;
					input-enable;
					drive-strength = <MTK_DRIVE_4mA>;
					bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
				};

				pins_clk {
					pins = <MT8173_PIN_75_MSDC1_DAT2__FUNC_MSDC1_DAT2>;
					bias-pull-down;
					drive-strength = <MTK_DRIVE_4mA>;
				};

				pins_insert {
					pins= <MT8173_PIN_132_I2S0_DATA1__FUNC_GPIO132>;
					bias-pull-up;
				};
			};

			mmc0_pins_uhs:  mmc0@0{
				pins_cmd_dat {
					pins = <MT8173_PIN_64_MSDC0_DAT7__FUNC_MSDC0_DAT7>,
						<MT8173_PIN_63_MSDC0_DAT6__FUNC_MSDC0_DAT6>,
						<MT8173_PIN_62_MSDC0_DAT5__FUNC_MSDC0_DAT5>,
						<MT8173_PIN_61_MSDC0_DAT4__FUNC_MSDC0_DAT4>,
						<MT8173_PIN_66_MSDC0_CMD__FUNC_MSDC0_CMD>,
						<MT8173_PIN_60_MSDC0_DAT3__FUNC_MSDC0_DAT3>,
						<MT8173_PIN_59_MSDC0_DAT2__FUNC_MSDC0_DAT2>,
						<MT8173_PIN_58_MSDC0_DAT1__FUNC_MSDC0_DAT1>,
						<MT8173_PIN_57_MSDC0_DAT0__FUNC_MSDC0_DAT0>,
						<MT8173_PIN_68_MSDC0_RST___FUNC_MSDC0_RSTB>;
					input-enable;
					drive-strength = <MTK_DRIVE_2mA>;
					bias-pull-up = <MTK_PUPD_SET_R1R0_01>;
				};

				pins_clk {
					pins = <MT8173_PIN_65_MSDC0_CLK__FUNC_MSDC0_CLK>;
					drive-strength = <MTK_DRIVE_2mA>;
					bias-pull-down = <MTK_PUPD_SET_R1R0_01>;
				};
			};

			mmc1_pins_uhs: mmc1@0 {
				pins_cmd_dat {
					pins = <MT8173_PIN_73_MSDC1_DAT0__FUNC_MSDC1_DAT0>,
						<MT8173_PIN_74_MSDC1_DAT1__FUNC_MSDC1_DAT1>,
						<MT8173_PIN_78_MSDC1_CMD__FUNC_MSDC1_CMD>,
						<MT8173_PIN_75_MSDC1_DAT2__FUNC_MSDC1_DAT2>,
						<MT8173_PIN_76_MSDC1_DAT3__FUNC_MSDC1_DAT3>;
					input-enable;
					drive-strength = <MTK_DRIVE_4mA>;
					bias-pull-up = <MTK_PUPD_SET_R1R0_10>;
				};

				pins_clk {
					pins = <MT8173_PIN_77_MSDC1_CLK__FUNC_MSDC1_CLK>;
					drive-strength = <MTK_DRIVE_4mA>;
					bias-pull-down = <MTK_PUPD_SET_R1R0_10>;
				};
			};
		};

		uart0: serial@11002000 {
			compatible = "mediatek,mt8173-uart","mediatek,mt6577-uart";
			reg = <0 0x11002000 0 0x400>;
			interrupts = <0 83 8>;
			clocks = <&uart_clk>;
		};

		uart1: serial@11003000 {
			compatible = "mediatek,mt8173-uart","mediatek,mt6577-uart";
			reg = <0 0x11003000 0 0x400>;
			interrupts = <0 84 8>;
			clocks = <&uart_clk>;
		};

		uart2: serial@11004000 {
			compatible = "mediatek,mt8173-uart","mediatek,mt6577-uart";
			reg = <0 0x11004000 0 0x400>;
			interrupts = <0 85 8>;
			clocks = <&uart_clk>;
		};

		uart3: serial@11005000 {
			compatible = "mediatek,mt8173-uart","mediatek,mt6577-uart";
			reg = <0 0x11005000 0 0x400>;
			interrupts = <0 86 8>;
			clocks = <&uart_clk>;
		};

		mmc0: mmc@11230000 {
			compatible = "mediatek,mt8173-mmc","mediatek,mmc";
			reg = <0 0x11230000 0 0x108>;
			interrupts = <0 71 IRQ_TYPE_LEVEL_LOW>;
			core-power-supply = <&mt6397_vemc_3v3_reg>;
			io-power-supply = <&mt6397_vio18_reg>;
			clocks = <&perisys PERI_MSDC30_0>, <&apmixedsys APMIXED_MSDCPLL>;
			clock-names = "src_clk", "pll_clk";
		};

		mmc1: mmc@11240000 {
			compatible = "mediatek,mt8173-mmc","mediatek,mmc";
			reg = <0 0x11240000 0 0x108>;
			interrupts = <0 72 IRQ_TYPE_LEVEL_LOW>;
			core-power-supply = <&mt6397_vmch_reg>;
			io-power-supply = <&mt6397_vmc_reg>;
			clocks = <&perisys PERI_MSDC30_1>, <&apmixedsys APMIXED_MSDCPLL>;
			clock-names = "src_clk", "pll_clk";
		};
	};

};

